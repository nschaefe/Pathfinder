alter session set `store.format`='json';
CREATE TABLE rep.out.`/out.json` AS
SELECT * FROM rep.root.`/tracker_1249273940.json` WHERE location NOT IN (SELECT FLATTEN(fields) FROM rep.root.`/tracker_1249273940_GLOBALS.json` );

SELECT * FROM rep.root.`/tracker_1249273940.json` WHERE location NOT IN (SELECT FLATTEN(fields) FROM rep.root.`/tracker_1249273940_GLOBALS.json` );

BASIC TEST CASE TO VERIFY STRATEGY: compare Future.done with startup obj init

--Compute globally single write fields (location object independent)--
First (inner select): gets for a field location (specified by parent and location) the actual write count. There can be several reports where readers read from different writes. So we are looking for the max.
Second: computes the object unrelated write count by summing up all write counts over all objects for one location.
Third: Filters the locations that have more than one write

alter session set `store.format`='json';
CREATE TABLE rep.out.`/out.json` AS
SELECT A.location, SUM(A.writer_count) as global_write_count FROM (SELECT parent,location, MAX(writer_count) as writer_count FROM rep.root.`./tracker_221915987.json` GROUP BY parent, location) AS A GROUP BY location HAVING global_write_count <=1;

--Find different writes on same obj independent location but with same stack trace (as transient writes)--

Get reported writes (no redundancy)
SELECT DISTINCT parent, location ,writer_count , writer_stacktrace FROM rep.root.`/tracker_report_291951268.json`;

SELECT location, (NOT (COUNT(writer_stacktrace)-COUNT(DISTINCT writer_stacktrace)) = 0) as double_trace FROM (SELECT DISTINCT parent, location ,writer_count , writer_stacktrace FROM rep.root.`./tracker_221915987.json`) GROUP BY location HAVING double_trace;



